buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

def mod_version = '2.0.0'

version = "1.12.2-"+mod_version

if (System.getenv('TRAVIS_BUILD_NUMBER') != null) {
    version += "-build-" + System.getenv('TRAVIS_BUILD_NUMBER')
}

group= "matteroverdrive"
archivesBaseName = "MatterOverdrive"


minecraft {
    version = "1.12.2-14.23.1.2607"
    runDir = "run"
    mappings = "snapshot_20171003"

    replaceIn "Reference.java"
    replace "@VERSION@", version
}

repositories {
    maven {
        name "tterrag"
        url "http://maven.tterrag.com"
    }
    maven {url "http://tehnut.info/maven"}
    maven {url "http://modmaven.k-4u.nl"}
    maven {
        name "progwml6"
        url "http://dvs1.progwml6.com/files/maven"
    }
}

dependencies {
    deobfProvided "mezz.jei:jei_1.12.2:4.8.5.138:api"
    runtime "mezz.jei:jei_1.12.2:4.8.5.138"

    deobfCompile group: 'mcp.mobius.waila', name: 'Hwyla', version: '1.8.23-B38_1.12'

    compile "com.astro.clib:CLib:1.0.1.28:deobf"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}


jar {
    manifest {
        attributes 'FMLAT': 'mo_at.cfg'
    }
}

task("uploadJars") {
    description = "uploads JARs"
    if (System.getenv("local_maven") != null) {
        apply plugin: 'maven'
        uploadArchives {
            repositories {
                mavenDeployer {
                    repository(url: "file://" + System.getenv("local_maven"))
                    pom {
                        groupId = project.group
                        version = project.version
                        artifactId = project.archivesBaseName
                        project {
                            name project.archivesBaseName
                            packaging 'jar'
                            description project.archivesBaseName
                            issueManagement {
                                system 'github'
                                url 'https://github.com/MatterOverdrive/MatterOverdrive/issues'
                            }
                            developers {
                                developer {
                                    id 'TheCodedOne'
                                    name 'TheCodedOne'
                                    roles { role 'developer' }
                                }
                                developer {
                                    id 'Dev-Osmium'
                                    name 'Dev-Osmium'
                                    roles { role 'developer' }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}